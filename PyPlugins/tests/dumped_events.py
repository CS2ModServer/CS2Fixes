dumped_events = dict({
    "core.gameevents":dict({
        "server_spawn":dict({
            "hostname":"string",
            "address":"string",
            "port":"short",
            "game":"string",
            "mapname":"string",
            "addonname":"string",
            "maxplayers":"long",
            "os":"string",
            "dedicated":"bool",
            "password":"bool",
            }),
        "server_pre_shutdown":dict({
            "reason":"string",
            }),
        "server_shutdown":dict({
            "reason":"string",
            }),
        "server_message":dict({
            "text":"string",
            }),
        "server_cvar":dict({
            "cvarname":"string",
            "cvarvalue":"string",
            }),
        "player_activate":dict({
            "userid":"playercontroller",
            }),
        "player_connect_full":dict({
            "userid":"playercontroller",
            }),
        "player_full_update":dict({
            "userid":"playercontroller",
            "count":"short",
            }),
        "player_connect":dict({
            "name":"string",
            "userid":"playercontroller",
            "networkid":"string",
            "xuid":"uint64",
            "address":"string",
            "bot":"bool",
            }),
        "player_disconnect":dict({
            "userid":"playercontroller",
            "reason":"short",
            "name":"string",
            "networkid":"string",
            "xuid":"uint64",
            "PlayerID":"short",
            }),
        "player_info":dict({
            "name":"string",
            "userid":"playercontroller",
            "steamid":"uint64",
            "bot":"bool",
            }),
        "player_spawn":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "player_team":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "team":"byte",
            "oldteam":"byte",
            "disconnect":"bool",
            "silent":"bool",
            "name":"string",
            "isbot":"bool",
            }),
        "local_player_team":dict({
            }),
        "local_player_controller_team":dict({
            }),
        "player_changename":dict({
            "userid":"playercontroller",
            "oldname":"string",
            "newname":"string",
            }),
        "player_hurt":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "attacker":"playercontroller",
            "attacker_pawn":"strict_ehandle",
            "health":"byte",
            }),
        "player_chat":dict({
            "teamonly":"bool",
            "userid":"playercontroller",
            "playerid":"short",
            "text":"string",
            }),
        "local_player_pawn_changed":dict({
            }),
        "teamplay_broadcast_audio":dict({
            "team":"byte",
            "sound":"string",
            }),
        "finale_start":dict({
            "rushes":"short",
            }),
        "player_stats_updated":dict({
            "forceupload":"bool",
            }),
        "user_data_downloaded":dict({
            }),
        "ragdoll_dissolved":dict({
            "entindex":"long",
            }),
        "team_info":dict({
            "teamid":"byte",
            "teamname":"string",
            }),
        "team_score":dict({
            "teamid":"byte",
            "score":"short",
            }),
        "hltv_cameraman":dict({
            "userid":"playercontroller",
            }),
        "hltv_chase":dict({
            "target1":"playercontroller",
            "target2":"playercontroller",
            "distance":"short",
            "theta":"short",
            "phi":"short",
            "inertia":"byte",
            "ineye":"byte",
            }),
        "hltv_rank_camera":dict({
            "index":"byte",
            "rank":"float",
            "target":"playercontroller",
            }),
        "hltv_rank_entity":dict({
            "userid":"playercontroller",
            "rank":"float",
            "target":"playercontroller",
            }),
        "hltv_fixed":dict({
            "posx":"long",
            "posy":"long",
            "posz":"long",
            "theta":"short",
            "phi":"short",
            "offset":"short",
            "fov":"float",
            "target":"playercontroller",
            }),
        "hltv_message":dict({
            "text":"string",
            }),
        "hltv_status":dict({
            "clients":"long",
            "slots":"long",
            "proxies":"short",
            "master":"string",
            }),
        "hltv_title":dict({
            "text":"string",
            }),
        "hltv_chat":dict({
            "text":"string",
            "steamID":"uint64",
            }),
        "hltv_versioninfo":dict({
            "version":"long",
            }),
        "hltv_replay":dict({
            "delay":"long",
            "reason":"long",
            }),
        "hltv_replay_status":dict({
            "reason":"long",
            }),
        "demo_start":dict({
            "local":"1",
            "dota_combatlog_list":"local",
            "dota_hero_chase_list":"local",
            "dota_pick_hero_list":"local",
            }),
        "demo_stop":dict({
            }),
        "demo_skip":dict({
            "local":"1",
            "playback_tick":"long",
            "skipto_tick":"long",
            "user_message_list":"local",
            "dota_hero_chase_list":"local",
            }),
        "map_shutdown":dict({
            }),
        "map_transition":dict({
            }),
        "hostname_changed":dict({
            "hostname":"string",
            }),
        "difficulty_changed":dict({
            "newDifficulty":"short",
            "oldDifficulty":"short",
            "strDifficulty":"string",
            }),
        "game_message":dict({
            "target":"byte",
            "text":"string",
            }),
        "game_newmap":dict({
            "mapname":"string",
            "transition":"bool",
            }),
        "round_start":dict({
            "timelimit":"long",
            "fraglimit":"long",
            "objective":"string",
            }),
        "round_end":dict({
            "winner":"byte",
            "reason":"byte",
            "message":"string",
            "time":"float",
            }),
        "round_start_pre_entity":dict({
            }),
        "round_start_post_nav":dict({
            }),
        "round_freeze_end":dict({
            }),
        "teamplay_round_start":dict({
            "full_reset":"bool",
            }),
        "player_death":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "attacker":"playercontroller",
            "attacker_pawn":"strict_ehandle",
            }),
        "player_footstep":dict({
            "userid":"player_pawn",
            }),
        "player_hintmessage":dict({
            "hintmessage":"string",
            }),
        "break_breakable":dict({
            "entindex":"long",
            "userid":"player_pawn",
            "material":"byte",
            }),
        "broken_breakable":dict({
            "entindex":"long",
            "userid":"player_pawn",
            "material":"byte",
            }),
        "break_prop":dict({
            "entindex":"long",
            "userid":"player_pawn",
            "player_held":"bool",
            "player_thrown":"bool",
            "player_dropped":"bool",
            }),
        "entity_killed":dict({
            "entindex_killed":"long",
            "entindex_attacker":"long",
            "entindex_inflictor":"long",
            "damagebits":"long",
            }),
        "door_close":dict({
            "userid":"player_pawn",
            "checkpoint":"bool",
            }),
        "vote_started":dict({
            "issue":"string",
            "param1":"string",
            "votedata":"string",
            "team":"byte",
            "initiator":"long",
            "reliable":"1",
            }),
        "vote_failed":dict({
            "team":"byte",
            "reliable":"1",
            }),
        "vote_passed":dict({
            "details":"string",
            "param1":"string",
            "team":"byte",
            "reliable":"1",
            }),
        "vote_changed":dict({
            "yesVotes":"byte",
            "noVotes":"byte",
            "potentialVotes":"byte",
            }),
        "vote_cast_yes":dict({
            "team":"byte",
            "entityid":"long",
            }),
        "vote_cast_no":dict({
            "team":"byte",
            "entityid":"long",
            }),
        "achievement_event":dict({
            "achievement_name":"string",
            "cur_val":"short",
            "max_val":"short",
            }),
        "achievement_earned":dict({
            "player":"playercontroller",
            "achievement":"short",
            }),
        "achievement_write_failed":dict({
            }),
        "bonus_updated":dict({
            "numadvanced":"short",
            "numbronze":"short",
            "numsilver":"short",
            "numgold":"short",
            }),
        "spec_target_updated":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "target":"ehandle",
            }),
        "spec_mode_updated":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "entity_visible":dict({
            "userid":"playercontroller",
            "subject":"long",
            "classname":"string",
            "entityname":"string",
            }),
        "gameinstructor_draw":dict({
            }),
        "gameinstructor_nodraw":dict({
            }),
        "flare_ignite_npc":dict({
            "entindex":"long",
            }),
        "helicopter_grenade_punt_miss":dict({
            }),
        "physgun_pickup":dict({
            "target":"ehandle",
            }),
        "inventory_updated":dict({
            "itemdef":"short",
            "itemid":"long",
            }),
        "cart_updated":dict({
            }),
        "store_pricesheet_updated":dict({
            }),
        "item_schema_initialized":dict({
            }),
        "drop_rate_modified":dict({
            }),
        "event_ticket_modified":dict({
            }),
        "gc_connected":dict({
            }),
        "instructor_start_lesson":dict({
            "userid":"playercontroller",
            "hint_name":"string",
            "hint_target":"long",
            "vr_movement_type":"byte",
            "vr_single_controller":"bool",
            "vr_controller_type":"byte",
            }),
        "instructor_close_lesson":dict({
            "userid":"playercontroller",
            "hint_name":"string",
            }),
        "instructor_server_hint_create":dict({
            "userid":"playercontroller",
            "hint_entindex":"long",
            "hint_name":"string",
            "hint_replace_key":"string",
            "hint_target":"long",
            "hint_activator_userid":"playercontroller",
            "hint_timeout":"short",
            "hint_icon_onscreen":"string",
            "hint_icon_offscreen":"string",
            "hint_caption":"string",
            "hint_activator_caption":"string",
            "hint_color":"string",
            "hint_icon_offset":"float",
            "hint_range":"float",
            "hint_flags":"long",
            "hint_binding":"string",
            "hint_allow_nodraw_target":"bool",
            "hint_nooffscreen":"bool",
            "hint_forcecaption":"bool",
            "hint_local_player_only":"bool",
            "hint_start_sound":"string",
            "hint_layoutfile":"string",
            "hint_vr_panel_type":"short",
            "hint_vr_height_offset":"float",
            "hint_vr_offset_x":"float",
            "hint_vr_offset_y":"float",
            "hint_vr_offset_z":"float",
            }),
        "instructor_server_hint_stop":dict({
            "hint_name":"string",
            "hint_entindex":"long",
            }),
        "set_instructor_group_enabled":dict({
            "group":"string",
            "enabled":"short",
            }),
        "clientside_lesson_closed":dict({
            "lesson_name":"string",
            }),
        "dynamic_shadow_light_changed":dict({
            }),
        }),
    "game.gameevents":dict({
        "gameui_hidden":dict({
                #empty one-line dict
            }),
        "player_team":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "team":"byte",
            "oldteam":"byte",
            "disconnect":"bool",
            "silent":"bool",
            "isbot":"bool",
            }),
        "player_chat":dict({
            "teamonly":"bool",
            "userid":"short",
            "text":"string",
            }),
        "player_score":dict({
            "userid":"playercontroller",
            "kills":"short",
            "deaths":"short",
            "score":"short",
            }),
        "player_shoot":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "weapon":"byte",
            "mode":"byte",
            }),
        "game_init":dict({
            }),
        "game_newmap":dict({
            "mapname":"string",
            }),
        "game_start":dict({
            "roundslimit":"long",
            "timelimit":"long",
            "fraglimit":"long",
            "objective":"string",
            }),
        "game_end":dict({
            "winner":"byte",
            }),
        "round_announce_match_point":dict({
            }),
        "round_announce_final":dict({
            }),
        "round_announce_last_round_half":dict({
            }),
        "round_announce_match_start":dict({
            }),
        "round_announce_warmup":dict({
            }),
        "warmup_end":dict({
            }),
        "round_end":dict({
            "winner":"byte",
            "reason":"byte",
            "message":"string",
            "legacy":"byte",
            }),
        "round_end_upload_stats":dict({
            }),
        "round_officially_ended":dict({
            }),
        "round_time_warning":dict({
            }),
        "ugc_map_info_received":dict({
            "published_file_id":"uint64",
            }),
        "ugc_map_unsubscribed":dict({
            "published_file_id":"uint64",
            }),
        "ugc_map_download_error":dict({
            "published_file_id":"uint64",
            "error_code":"long",
            }),
        "ugc_file_download_finished":dict({
            "hcontent":"uint64",
            }),
        "ugc_file_download_start":dict({
            "hcontent":"uint64",
            "published_file_id":"uint64",
            }),
        "begin_new_match":dict({
            }),
        "dm_bonus_weapon_start":dict({
            "time":"short",
            "Pos":"short",
            }),
        "survival_announce_phase":dict({
            "phase":"short",
            }),
        "break_prop":dict({
            "entindex":"long",
            "userid":"player_pawn",
            }),
        "player_decal":dict({
            "userid":"player_pawn",
            }),
        "entity_visible":dict({
            "userid":"playercontroller",
            "subject":"short",
            "classname":"string",
            "entityname":"string",
            }),
        "instructor_server_hint_create":dict({
            "userid":"playercontroller",
            "hint_name":"string",
            "hint_replace_key":"string",
            "hint_target":"long",
            "hint_activator_userid":"playercontroller",
            "hint_timeout":"short",
            "hint_icon_onscreen":"string",
            "hint_icon_offscreen":"string",
            "hint_caption":"string",
            "hint_activator_caption":"string",
            "hint_color":"string",
            "hint_icon_offset":"float",
            "hint_range":"float",
            "hint_flags":"long",
            "hint_binding":"string",
            "hint_gamepad_binding":"string",
            "hint_allow_nodraw_target":"bool",
            "hint_nooffscreen":"bool",
            "hint_forcecaption":"bool",
            "hint_local_player_only":"bool",
            }),
        "instructor_server_hint_stop":dict({
            "hint_name":"string",
            }),
        "read_game_titledata":dict({
            "controllerId":"short",
            }),
        "write_game_titledata":dict({
            "controllerId":"short",
            }),
        "reset_game_titledata":dict({
            "controllerId":"short",
            }),
        "weaponhud_selection":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "mode":"byte",
            "entindex":"long",
            }),
        "vote_ended":dict({
            }),
        "vote_started":dict({
            "issue":"string",
            "param1":"string",
            "team":"byte",
            "initiator":"long",
            }),
        "vote_changed":dict({
            "vote_option1":"byte",
            "vote_option2":"byte",
            "vote_option3":"byte",
            "vote_option4":"byte",
            "vote_option5":"byte",
            "potentialVotes":"byte",
            }),
        "vote_cast":dict({
            "vote_option":"byte",
            "team":"short",
            "userid":"playercontroller",
            }),
        "vote_options":dict({
            "count":"byte",
            "option1":"string",
            "option2":"string",
            "option3":"string",
            "option4":"string",
            "option5":"string",
            }),
        "endmatch_mapvote_selecting_map":dict({
            "count":"byte",
            "slot1":"byte",
            "slot2":"byte",
            "slot3":"byte",
            "slot4":"byte",
            "slot5":"byte",
            "slot6":"byte",
            "slot7":"byte",
            "slot8":"byte",
            "slot9":"byte",
            "slot10":"byte",
            }),
        "endmatch_cmm_start_reveal_items":dict({
            }),
        "inventory_updated":dict({
            }),
        "client_loadout_changed":dict({
            }),
        "add_player_sonar_icon":dict({
            "userid":"playercontroller",
            "pos_x":"float",
            "pos_y":"float",
            "pos_z":"float",
            }),
        "door_open":dict({
            "userid":"player_pawn",
            "entindex":"long",
            }),
        "door_closed":dict({
            "userid":"player_pawn",
            "entindex":"long",
            }),
        "door_break":dict({
            "entindex":"long",
            "dmgstate":"long",
            }),
        "add_bullet_hit_marker":dict({
            "userid":"playercontroller",
            "bone":"short",
            "pos_x":"short",
            "pos_y":"short",
            "pos_z":"short",
            "ang_x":"short",
            "ang_y":"short",
            "ang_z":"short",
            "start_x":"short",
            "start_y":"short",
            "start_z":"short",
            "hit":"bool",
            }),
        }),

    "mod.gameevents":dict({
        "player_death":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "attacker":"playercontroller",
            "attacker_pawn":"strict_ehandle",
            "assister":"playercontroller",
            "assister_pawn":"strict_ehandle",
            "assistedflash":"bool",
            "weapon":"string",
            "weapon_itemid":"string",
            "weapon_fauxitemid":"string",
            "weapon_originalowner_xuid":"string",
            "headshot":"bool",
            "dominated":"short",
            "revenge":"short",
            "wipe":"short",
            "penetrated":"short",
            "noreplay":"bool",
            "noscope":"bool",
            "thrusmoke":"bool",
            "attackerblind":"bool",
            "distance":"float",
            "dmg_health":"short",
            "dmg_armor":"byte",
            "hitgroup":"byte",
            "attackerinair":"bool",
            }),
        "other_death":dict({
            "otherid":"short",
            "othertype":"string",
            "attacker":"short",
            "weapon":"string",
            "weapon_itemid":"string",
            "weapon_fauxitemid":"string",
            "weapon_originalowner_xuid":"string",
            "headshot":"bool",
            "penetrated":"short",
            "noscope":"bool",
            "thrusmoke":"bool",
            "attackerblind":"bool",
            }),
        "player_hurt":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "attacker":"playercontroller",
            "attacker_pawn":"strict_ehandle",
            "health":"byte",
            "armor":"byte",
            "weapon":"string",
            "dmg_health":"short",
            "dmg_armor":"byte",
            "hitgroup":"byte",
            }),
        "bullet_damage":dict({
            "victim":"playercontroller",
            "victim_pawn":"strict_ehandle",
            "attacker":"playercontroller",
            "attacker_pawn":"strict_ehandle",
            "distance":"float",
            "damage_dir_x":"float",
            "damage_dir_y":"float",
            "damage_dir_z":"float",
            "num_penetrations":"byte",
            "no_scope":"bool",
            "in_air":"bool",
            }),
        "item_purchase":dict({
            "userid":"playercontroller",
            "team":"short",
            "loadout":"short",
            "weapon":"string",
            }),
        "bomb_beginplant":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "site":"short",
            }),
        "bomb_abortplant":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "site":"short",
            }),
        "bomb_planted":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "site":"short",
            }),
        "bomb_defused":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "site":"short",
            }),
        "bomb_exploded":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "site":"short",
            }),
        "bomb_dropped":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entindex":"long",
            }),
        "bomb_pickup":dict({
            "userid":"player_pawn",
            }),
        "defuser_dropped":dict({
            "entityid":"long",
            }),
        "defuser_pickup":dict({
            "entityid":"long",
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "announce_phase_end":dict({
            }),
        "cs_intermission":dict({
            }),
        "bomb_begindefuse":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "haskit":"bool",
            }),
        "bomb_abortdefuse":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "hostage_follows":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "hostage":"short",
            }),
        "hostage_hurt":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "hostage":"short",
            }),
        "hostage_killed":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "hostage":"short",
            }),
        "hostage_rescued":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "hostage":"short",
            "site":"short",
            }),
        "hostage_stops_following":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "hostage":"short",
            }),
        "hostage_rescued_all":dict({
            }),
        "hostage_call_for_help":dict({
            "hostage":"short",
            }),
        "vip_escaped":dict({
            "userid":"playercontroller",
            }),
        "vip_killed":dict({
            "userid":"playercontroller",
            "attacker":"playercontroller",
            }),
        "player_radio":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "slot":"short",
            }),
        "bomb_beep":dict({
            "entindex":"long",
            }),
        "weapon_fire":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "weapon":"string",
            "silenced":"bool",
            }),
        "weapon_fire_on_empty":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "weapon":"string",
            }),
        "grenade_thrown":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "weapon":"string",
            }),
        "weapon_reload":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "weapon_zoom":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "silencer_detach":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "inspect_weapon":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "weapon_zoom_rifle":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "player_spawned":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "inrestart":"bool",
            }),
        "item_pickup":dict({
            "userid":"playercontroller",
            "item":"string",
            "silent":"bool",
            "defindex":"long",
            }),
        "item_pickup_slerp":dict({
            "userid":"playercontroller",
            "index":"short",
            "behavior":"short",
            }),
        "item_pickup_failed":dict({
            "userid":"playercontroller",
            "item":"string",
            "reason":"short",
            "limit":"short",
            }),
        "item_remove":dict({
            "userid":"playercontroller",
            "item":"string",
            "defindex":"long",
            }),
        "ammo_pickup":dict({
            "userid":"playercontroller",
            "item":"string",
            "index":"long",
            }),
        "item_equip":dict({
            "userid":"playercontroller",
            "item":"string",
            "defindex":"long",
            "canzoom":"bool",
            "hassilencer":"bool",
            "issilenced":"bool",
            "hastracers":"bool",
            "weptype":"short",
            "ispainted":"bool",
            }),
        "enter_buyzone":dict({
            "userid":"playercontroller",
            "canbuy":"bool",
            }),
        "exit_buyzone":dict({
            "userid":"playercontroller",
            "canbuy":"bool",
            }),
        "buytime_ended":dict({
            }),
        "enter_bombzone":dict({
            "userid":"playercontroller",
            "hasbomb":"bool",
            "isplanted":"bool",
            }),
        "exit_bombzone":dict({
            "userid":"playercontroller",
            "hasbomb":"bool",
            "isplanted":"bool",
            }),
        "enter_rescue_zone":dict({
            "userid":"playercontroller",
            }),
        "exit_rescue_zone":dict({
            "userid":"playercontroller",
            }),
        "silencer_off":dict({
            "userid":"playercontroller",
            }),
        "silencer_on":dict({
            "userid":"playercontroller",
            }),
        "buymenu_open":dict({
            }),
        "buymenu_close":dict({
            "userid":"playercontroller",
            }),
        "round_prestart":dict({
            }),
        "round_poststart":dict({
            }),
        "round_end":dict({
            "winner":"byte",
            "reason":"byte",
            "message":"string",
            "legacy":"byte",
            "player_count":"short",
            "nomusic":"byte",
            }),
        "grenade_bounce":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "hegrenade_detonate":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "flashbang_detonate":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "smokegrenade_detonate":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "smokegrenade_expired":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "molotov_detonate":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "decoy_detonate":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "decoy_started":dict({
            "userid":"player_pawn",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "tagrenade_detonate":dict({
            "userid":"playercontroller",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "inferno_startburn":dict({
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "inferno_expire":dict({
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "inferno_extinguish":dict({
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "decoy_firing":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "bullet_impact":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "x":"float",
            "y":"float",
            "z":"float",
            }),
        "player_footstep":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "player_jump":dict({
            "userid":"playercontroller",
            }),
        "player_blind":dict({
            "userid":"playercontroller",
            "attacker":"playercontroller",
            "entityid":"short",
            "blind_duration":"float",
            }),
        "player_falldamage":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "damage":"float",
            }),
        "door_moving":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entindex":"long",
            }),
        "mb_input_lock_success":dict({
            }),
        "mb_input_lock_cancel":dict({
            }),
        "nav_blocked":dict({
            "area":"long",
            "blocked":"bool",
            }),
        "nav_generate":dict({
            }),
        "achievement_info_loaded":dict({
            }),
        "spec_mode_updated":dict({
            "userid":"playercontroller",
            }),
        "hltv_changed_mode":dict({
            "oldmode":"long",
            "newmode":"long",
            "obs_target":"long",
            }),
        "cs_game_disconnected":dict({
            }),
        "cs_round_final_beep":dict({
            }),
        "cs_round_start_beep":dict({
            }),
        "cs_win_panel_round":dict({
            "show_timer_defend":"bool",
            "show_timer_attack":"bool",
            "timer_time":"short",
            "final_event":"byte",
            "funfact_token":"string",
            "funfact_player":"playercontroller",
            "funfact_data1":"long",
            "funfact_data2":"long",
            "funfact_data3":"long",
            }),
        "cs_win_panel_match":dict({
            }),
        "cs_match_end_restart":dict({
            }),
        "cs_pre_restart":dict({
            }),
        "show_deathpanel":dict({
            "victim":"playercontroller",
            "victim_pawn":"strict_ehandle",
            "killer":"ehandle",
            "killer_controller":"playercontroller",
            "hits_taken":"short",
            "damage_taken":"short",
            "hits_given":"short",
            "damage_given":"short",
            }),
        "hide_deathpanel":dict({
            }),
        "player_avenged_teammate":dict({
            "avenger_id":"playercontroller",
            "avenged_player_id":"playercontroller",
            }),
        "achievement_earned_local":dict({
            "achievement":"short",
            "splitscreenplayer":"short",
            }),
        "repost_xbox_achievements":dict({
            "splitscreenplayer":"short",
            }),
        "match_end_conditions":dict({
            "frags":"long",
            "max_rounds":"long",
            "win_rounds":"long",
            "time":"long",
            }),
        "round_mvp":dict({
            "userid":"playercontroller",
            "reason":"short",
            "value":"long",
            "musickitmvps":"long",
            "nomusic":"byte",
            "musickitid":"long",
            }),
        "show_survival_respawn_status":dict({
            "loc_token":"string",
            "duration":"long",
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            }),
        "client_disconnect":dict({
            }),
        "gg_killed_enemy":dict({
            "victimid":"playercontroller",
            "attackerid":"playercontroller",
            "dominated":"short",
            "revenge":"short",
            "bonus":"bool",
            }),
        "switch_team":dict({
            "numPlayers":"short",
            "numSpectators":"short",
            "avg_rank":"short",
            "numTSlotsFree":"short",
            "numCTSlotsFree":"short",
            }),
        "write_profile_data":dict({
            }),
        "trial_time_expired":dict({
            "userid":"playercontroller",
            }),
        "update_matchmaking_stats":dict({
            }),
        "player_reset_vote":dict({
            "userid":"playercontroller",
            "vote":"bool",
            }),
        "enable_restart_voting":dict({
            "enable":"bool",
            }),
        "sfuievent":dict({
            "action":"string",
            "data":"string",
            "slot":"byte",
            }),
        "start_vote":dict({
            "userid":"playercontroller",
            "type":"byte",
            "vote_parameter":"short",
            }),
        "player_given_c4":dict({
            "userid":"playercontroller",
            }),
        "bot_takeover":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "botid":"playercontroller",
            "p":"float",
            "y":"float",
            "r":"float",
            }),
        "jointeam_failed":dict({
            "userid":"playercontroller",
            "reason":"byte",
            }),
        "teamchange_pending":dict({
            "userid":"playercontroller",
            "toteam":"byte",
            }),
        "material_default_complete":dict({
            }),
        "cs_prev_next_spectator":dict({
            "next":"bool",
            }),
        "nextlevel_changed":dict({
            "nextlevel":"string",
            "mapgroup":"string",
            "skirmishmode":"string",
            }),
        "seasoncoin_levelup":dict({
            "userid":"playercontroller",
            "category":"short",
            "rank":"short",
            }),
        "tournament_reward":dict({
            "defindex":"long",
            "totalrewards":"long",
            "accountid":"long",
            }),
        "start_halftime":dict({
            }),
        "ammo_refill":dict({
            "userid":"playercontroller",
            "success":"bool",
            }),
        "parachute_pickup":dict({
            "userid":"playercontroller",
            }),
        "parachute_deploy":dict({
            "userid":"playercontroller",
            }),
        "dronegun_attack":dict({
            "userid":"playercontroller",
            }),
        "drone_dispatched":dict({
            "userid":"playercontroller",
            "priority":"short",
            "drone_dispatched":"short",
            }),
        "loot_crate_visible":dict({
            "userid":"playercontroller",
            "subject":"short",
            "type":"string",
            }),
        "loot_crate_opened":dict({
            "userid":"playercontroller",
            "type":"string",
            }),
        "open_crate_instr":dict({
            "userid":"playercontroller",
            "subject":"short",
            "type":"string",
            }),
        "smoke_beacon_paradrop":dict({
            "userid":"playercontroller",
            "paradrop":"short",
            }),
        "survival_paradrop_spawn":dict({
            "entityid":"short",
            }),
        "survival_paradrop_break":dict({
            "entityid":"short",
            }),
        "drone_cargo_detached":dict({
            "userid":"playercontroller",
            "cargo":"short",
            "delivered":"bool",
            }),
        "drone_above_roof":dict({
            "userid":"playercontroller",
            "cargo":"short",
            }),
        "choppers_incoming_warning":dict({
            "global":"bool",
            }),
        "firstbombs_incoming_warning":dict({
            "global":"bool",
            }),
        "dz_item_interaction":dict({
            "userid":"playercontroller",
            "subject":"short",
            "type":"string",
            }),
        "survival_teammate_respawn":dict({
            "userid":"playercontroller",
            }),
        "survival_no_respawns_warning":dict({
            "userid":"playercontroller",
            }),
        "survival_no_respawns_final":dict({
            "userid":"playercontroller",
            }),
        "player_ping":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "entityid":"short",
            "x":"float",
            "y":"float",
            "z":"float",
            "urgent":"bool",
            }),
        "player_ping_stop":dict({
            "entityid":"short",
            }),
        "player_sound":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "radius":"int",
            "duration":"float",
            "step":"bool",
            }),
        "guardian_wave_restart":dict({
            }),
        "team_intro_start":dict({
            }),
        "team_intro_end":dict({
            }),
        "bullet_flight_resolution":dict({
            "userid":"playercontroller",
            "userid_pawn":"strict_ehandle",
            "pos_x":"short",
            "pos_y":"short",
            "pos_z":"short",
            "ang_x":"short",
            "ang_y":"short",
            "ang_z":"short",
            "start_x":"short",
            "start_y":"short",
            "start_z":"short",
            }),
        "game_phase_changed":dict({
            "new_phase":"short",
            }),
        "clientside_reload_custom_econ":dict({
            "steamid":"string",
            }),
        }),
});